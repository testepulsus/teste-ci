name: PyTest
run-name: PyTest

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      active:
        required: false
        default: true
        type: boolean

jobs:
  python-ci-pytest:
    if: ${{ inputs.active == true }}
    runs-on: ubuntu-latest
    name: PyTest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: |
          pip install --no-cache-dir --upgrade -r requirements.txt
          pip install --no-cache-dir pytest
          pip install --no-cache-dir coverage

      - name: Run PyTest and Collect Coverage
        run: |
          coverage run -m pytest --continue-on-collection-errors
          coverage report --fail-under=5

      - name: Generate Coverage Markdown Summary
        run: |
          echo "## ðŸ“Š Test Coverage Report ðŸ“Š" >> $GITHUB_STEP_SUMMARY
          echo "| File | Statements | Missed | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
          coverage json -o coverage.json
          cat coverage.json | jq -r '
            .files |
            to_entries[] |
            select(.value != null) |
            "| \(.key) | \(.value.summary.num_statements) | \(.value.summary.missing_lines) | \(.value.summary.percent_covered // 0)% |"
          ' >> $GITHUB_STEP_SUMMARY
